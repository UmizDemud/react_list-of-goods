{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","this","className","type","onClick","setState","prev","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACDC,EA/BH,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNI,EAAY,YAAOD,GAQzB,OANiB,IAAbF,EACFG,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACtB,IAAbN,GACTG,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGpCT,EACHI,EAAaM,UACbN,EAgBYO,CACZd,EACAe,KAAKb,OAGP,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,wBAA2C,IAAxBD,KAAKb,MAAME,SAAiB,YAAc,IACtEc,QAAS,kBAAM,EAAKC,SAAS,CAAEf,SAAU,KAH3C,iCAQA,wBACEa,KAAK,SACLD,UAAS,2BAA8C,IAAxBD,KAAKb,MAAME,SAAiB,YAAc,IACzEc,QAAS,kBAAM,EAAKC,SAAS,CAAEf,SAAU,KAH3C,4BAQA,wBACEa,KAAK,SACLD,UAAS,2BAAuBD,KAAKb,MAAMC,WAA2B,GAAd,aACxDe,QAAS,kBAAM,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACpCjB,YAAaiB,EAAKjB,gBAJtB,qBAUyB,IAAxBY,KAAKb,MAAME,UAAkBW,KAAKb,MAAMC,WAErC,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKC,SAAS,CAC3BhB,YAAY,EACZC,SAAU,KALd,mBAWA,gCAGN,6BACE,6BACGE,EAAMe,KAAK,SAAAC,GAAI,OACd,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA5DvB,GAAyBC,IAAMC,WClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4e575a4.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === 1) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === 2) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info${this.state.sortType !== 1 ? ' is-light' : ''}`}\n            onClick={() => this.setState({ sortType: 1 })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success${this.state.sortType !== 2 ? ' is-light' : ''}`}\n            onClick={() => this.setState({ sortType: 2 })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning${!this.state.isReversed ? ' is-light' : ''}`}\n            onClick={() => this.setState(prev => ({\n              isReversed: !prev.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {this.state.sortType !== 0 || this.state.isReversed\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => this.setState({\n                  isReversed: false,\n                  sortType: 0,\n                })}\n              >\n                Reset\n              </button>\n            )\n            : <></>}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map((item => (\n              <li key={item} data-cy=\"Good\">{item}</li>\n            )))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}