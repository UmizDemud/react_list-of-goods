{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","className","type","onClick","setState","prev","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACDC,EA/BH,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNI,EAAY,YAAOD,GAQzB,OANIF,IAAaL,EAASS,SACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCP,IAAaL,EAASc,QAC/BN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGpCX,EACHI,EAAaQ,UACbR,EAgBYS,CACZhB,EACAiB,KAAKf,OAGP,EAGIe,KAAKf,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,wBAAmBd,IAAaL,EAASS,SAAW,YAAc,IAC3EY,QAAS,kBAAM,EAAKC,SAAS,CAAEjB,SAAUL,EAASS,YAHpD,iCAQA,wBACEW,KAAK,SACLD,UAAS,2BAAsBd,IAAaL,EAASc,OAAS,YAAc,IAC5EO,QAAS,kBAAM,EAAKC,SAAS,CAAEjB,SAAUL,EAASc,UAHpD,4BAQA,wBACEM,KAAK,SACLD,UAAS,2BAAuBf,EAA2B,GAAd,aAC7CiB,QAAS,kBAAM,EAAKC,UAAS,SAAAC,GAAI,MAAK,CACpCnB,YAAamB,EAAKnB,gBAJtB,sBAUEC,IAAaL,EAASM,MAAQF,IAE5B,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKC,SAAS,CAC3BlB,YAAY,EACZC,SAAUL,EAASM,QALvB,sBAaN,6BACE,6BACGC,EAAMiB,KAAK,SAAAC,GAAI,OACd,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAhEvB,GAAyBC,IAAMC,WClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ff7e423f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info${sortType !== SortType.ALPHABET ? ' is-light' : ''}`}\n            onClick={() => this.setState({ sortType: SortType.ALPHABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success${sortType !== SortType.LENGTH ? ' is-light' : ''}`}\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning${!isReversed ? ' is-light' : ''}`}\n            onClick={() => this.setState(prev => ({\n              isReversed: !prev.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                })}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map((item => (\n              <li key={item} data-cy=\"Good\">{item}</li>\n            )))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}